[{"F:\\react-course-project\\devconnector\\client\\src\\reportWebVitals.js":"1","F:\\react-course-project\\devconnector\\client\\src\\App.js":"2","F:\\react-course-project\\devconnector\\client\\src\\index.js":"3","F:\\react-course-project\\devconnector\\client\\src\\components\\layout\\Navbar.js":"4","F:\\react-course-project\\devconnector\\client\\src\\components\\layout\\Landing.js":"5","F:\\react-course-project\\devconnector\\client\\src\\components\\auth\\Register.js":"6","F:\\react-course-project\\devconnector\\client\\src\\components\\auth\\Login.js":"7","F:\\react-course-project\\devconnector\\client\\src\\store.js":"8","F:\\react-course-project\\devconnector\\client\\src\\reducers\\index.js":"9","F:\\react-course-project\\devconnector\\client\\src\\reducers\\alert.js":"10","F:\\react-course-project\\devconnector\\client\\src\\actions\\types.js":"11","F:\\react-course-project\\devconnector\\client\\src\\actions\\alert.js":"12","F:\\react-course-project\\devconnector\\client\\src\\components\\layout\\Alert.js":"13","F:\\react-course-project\\devconnector\\client\\src\\actions\\auth.js":"14","F:\\react-course-project\\devconnector\\client\\src\\reducers\\auth.js":"15","F:\\react-course-project\\devconnector\\client\\src\\utils\\setAuthToken.js":"16","F:\\react-course-project\\devconnector\\client\\src\\components\\dashboard\\Dashboard.js":"17","F:\\react-course-project\\devconnector\\client\\src\\components\\routing\\PrivateRoute.js":"18","F:\\react-course-project\\devconnector\\client\\src\\reducers\\profile.js":"19","F:\\react-course-project\\devconnector\\client\\src\\actions\\profile.js":"20","F:\\react-course-project\\devconnector\\client\\src\\components\\layout\\Spinner.js":"21","F:\\react-course-project\\devconnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","F:\\react-course-project\\devconnector\\client\\src\\components\\dashboard\\DashboardActions.js":"23","F:\\react-course-project\\devconnector\\client\\src\\components\\profile-forms\\EditProfile.js":"24","F:\\react-course-project\\devconnector\\client\\src\\components\\profile-forms\\AddExperience.js":"25","F:\\react-course-project\\devconnector\\client\\src\\components\\profile-forms\\AddEducation.js":"26","F:\\react-course-project\\devconnector\\client\\src\\components\\dashboard\\Experience.js":"27","F:\\react-course-project\\devconnector\\client\\src\\components\\dashboard\\Education.js":"28","F:\\react-course-project\\devconnector\\client\\src\\components\\profiles\\Profiles.js":"29","F:\\react-course-project\\devconnector\\client\\src\\components\\profiles\\ProfileItem.js":"30","F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\Profile.js":"31","F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileTop.js":"32","F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileAbout.js":"33","F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileExperience.js":"34","F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileEducation.js":"35","F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileGithub.js":"36"},{"size":362,"mtime":1606188823558,"results":"37","hashOfConfig":"38"},{"size":2259,"mtime":1608269447624,"results":"39","hashOfConfig":"38"},{"size":266,"mtime":1607863498121,"results":"40","hashOfConfig":"38"},{"size":1597,"mtime":1608223574329,"results":"41","hashOfConfig":"38"},{"size":1196,"mtime":1608119935213,"results":"42","hashOfConfig":"38"},{"size":3019,"mtime":1608038998300,"results":"43","hashOfConfig":"38"},{"size":2006,"mtime":1608037869917,"results":"44","hashOfConfig":"38"},{"size":385,"mtime":1607942827592,"results":"45","hashOfConfig":"38"},{"size":210,"mtime":1608058634243,"results":"46","hashOfConfig":"38"},{"size":417,"mtime":1607946159005,"results":"47","hashOfConfig":"38"},{"size":708,"mtime":1608221119729,"results":"48","hashOfConfig":"38"},{"size":356,"mtime":1608004076680,"results":"49","hashOfConfig":"38"},{"size":516,"mtime":1608003509592,"results":"50","hashOfConfig":"38"},{"size":2285,"mtime":1608130327429,"results":"51","hashOfConfig":"38"},{"size":1325,"mtime":1608205965394,"results":"52","hashOfConfig":"38"},{"size":293,"mtime":1608021409797,"results":"53","hashOfConfig":"38"},{"size":2198,"mtime":1608278245677,"results":"54","hashOfConfig":"38"},{"size":607,"mtime":1608056576627,"results":"55","hashOfConfig":"38"},{"size":1291,"mtime":1608221275939,"results":"56","hashOfConfig":"38"},{"size":6822,"mtime":1608261492380,"results":"57","hashOfConfig":"38"},{"size":299,"mtime":1608125958337,"results":"58","hashOfConfig":"38"},{"size":6629,"mtime":1608189956751,"results":"59","hashOfConfig":"38"},{"size":691,"mtime":1608188211900,"results":"60","hashOfConfig":"38"},{"size":7979,"mtime":1608232972931,"results":"61","hashOfConfig":"38"},{"size":3178,"mtime":1608261596691,"results":"62","hashOfConfig":"38"},{"size":3191,"mtime":1608261573627,"results":"63","hashOfConfig":"38"},{"size":1564,"mtime":1608216358820,"results":"64","hashOfConfig":"38"},{"size":1549,"mtime":1608216552588,"results":"65","hashOfConfig":"38"},{"size":1291,"mtime":1608232907660,"results":"66","hashOfConfig":"38"},{"size":1069,"mtime":1608232748283,"results":"67","hashOfConfig":"38"},{"size":2984,"mtime":1608285296363,"results":"68","hashOfConfig":"38"},{"size":2584,"mtime":1608277482458,"results":"69","hashOfConfig":"38"},{"size":959,"mtime":1608281827927,"results":"70","hashOfConfig":"38"},{"size":685,"mtime":1608283092596,"results":"71","hashOfConfig":"38"},{"size":759,"mtime":1608283378587,"results":"72","hashOfConfig":"38"},{"size":2116,"mtime":1608288801668,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1tvhai5",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"99"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\react-course-project\\devconnector\\client\\src\\reportWebVitals.js",[],["158","159"],"F:\\react-course-project\\devconnector\\client\\src\\App.js",[],["160","161"],"F:\\react-course-project\\devconnector\\client\\src\\index.js",[],["162","163"],"F:\\react-course-project\\devconnector\\client\\src\\components\\layout\\Navbar.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\layout\\Landing.js",[],["164","165"],"F:\\react-course-project\\devconnector\\client\\src\\components\\auth\\Register.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\auth\\Login.js",[],"F:\\react-course-project\\devconnector\\client\\src\\store.js",[],"F:\\react-course-project\\devconnector\\client\\src\\reducers\\index.js",[],"F:\\react-course-project\\devconnector\\client\\src\\reducers\\alert.js",["166"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}",["167","168"],"F:\\react-course-project\\devconnector\\client\\src\\actions\\types.js",[],"F:\\react-course-project\\devconnector\\client\\src\\actions\\alert.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\layout\\Alert.js",[],"F:\\react-course-project\\devconnector\\client\\src\\actions\\auth.js",[],"F:\\react-course-project\\devconnector\\client\\src\\reducers\\auth.js",["169"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","F:\\react-course-project\\devconnector\\client\\src\\utils\\setAuthToken.js",["170"],"import axios from 'axios';\r\nimport { del } from 'request';\r\n\r\nconst setAuthToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","F:\\react-course-project\\devconnector\\client\\src\\components\\dashboard\\Dashboard.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"F:\\react-course-project\\devconnector\\client\\src\\reducers\\profile.js",["171"],"import { \r\n    GET_PROFILE, \r\n    PROFILE_ERROR, \r\n    CLEAR_PROFILE, \r\n    UPDATE_PROFILE, \r\n    GET_PROFILES, \r\n    GET_REPOS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch(type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","F:\\react-course-project\\devconnector\\client\\src\\actions\\profile.js",["172"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    CLEAR_PROFILE,\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from './types';\r\n\r\n// Get Current User Profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({type: CLEAR_PROFILE});\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Get github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Creae of update profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience Deleted', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Delete education\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education Deleted', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Are you sure? This can NOT be undone!')); {\r\n        try {\r\n            await axios.delete('/api/profile');\r\n    \r\n            dispatch({ type: CLEAR_PROFILE });\r\n            dispatch({ type: ACCOUNT_DELETED });\r\n    \r\n            dispatch(setAlert('Your account has been permanantly deleted'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {\r\n                    msg: err.response.statusText,\r\n                    status: err.response.status\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","F:\\react-course-project\\devconnector\\client\\src\\components\\layout\\Spinner.js",["173"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img \r\n            src={spinner}\r\n            style={{width: '200px', margin: 'auto', display: 'block'}}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);","F:\\react-course-project\\devconnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profile-forms\\EditProfile.js",["174"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({profile: {profile, loading}, createProfile, history, getCurrentProfile}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n    const{\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                    <option value=\"0\">* Select Professional Status</option>\r\n                    <option value=\"Developer\">Developer</option>\r\n                    <option value=\"Junior Developer\">Junior Developer</option>\r\n                    <option value=\"Senior Developer\">Senior Developer</option>\r\n                    <option value=\"Manager\">Manager</option>\r\n                    <option value=\"Student or Learning\">Student or Learning</option>\r\n                    <option value=\"Instructor\">Instructor or Teacher</option>\r\n                    <option value=\"Intern\">Intern</option>\r\n                    <option value=\"Other\">Other</option>\r\n                </select>\r\n                <small className=\"form-text\">Give us an idea of where you are at in your career</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n                <small className=\"form-text\">Could be your own company or one you work for</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n                <small className=\"form-text\">Could be your own or a company website</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n                <small className=\"form-text\">City & state suggested (eg. Boston, MA)</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                <small className=\"form-text\">Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP)</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Github Username\"\r\n                    name=\"githubusername\"\r\n                    value={githubusername} onChange={e => onChange(e)}\r\n                />\r\n                <small className=\"form-text\">If you want your latest repos and a Github link, include your\r\n                    username</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n                <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n                    Add Social Network Links\r\n                </button>\r\n                <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && <Fragment>\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-twitter fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-facebook fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-youtube fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-instagram fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n                    </div>\r\n                </Fragment>}\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: propTypes.func.isRequired,\r\n    profile: propTypes.object.isRequired,\r\n    getCurrentProfile: propTypes.func.isRequired,\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile));\r\n","F:\\react-course-project\\devconnector\\client\\src\\components\\profile-forms\\AddExperience.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profile-forms\\AddEducation.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\dashboard\\Experience.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\dashboard\\Education.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profiles\\Profiles.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profiles\\ProfileItem.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\Profile.js",["175"],"F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileTop.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileAbout.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileExperience.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileEducation.js",[],"F:\\react-course-project\\devconnector\\client\\src\\components\\profile\\ProfileGithub.js",["176"],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"177","replacedBy":"181"},{"ruleId":"179","replacedBy":"182"},{"ruleId":"177","replacedBy":"183"},{"ruleId":"179","replacedBy":"184"},{"ruleId":"177","replacedBy":"185"},{"ruleId":"179","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":5,"column":1,"nodeType":"189","endLine":15,"endColumn":2},{"ruleId":"177","replacedBy":"190"},{"ruleId":"179","replacedBy":"191"},{"ruleId":"187","severity":1,"message":"188","line":19,"column":1,"nodeType":"189","endLine":54,"endColumn":2},{"ruleId":"192","severity":1,"message":"193","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":17,"column":1,"nodeType":"189","endLine":56,"endColumn":2},{"ruleId":"196","severity":1,"message":"197","line":243,"column":66,"nodeType":"198","messageId":"199","endLine":260,"endColumn":6},{"ruleId":"187","severity":1,"message":"200","line":5,"column":1,"nodeType":"189","endLine":13,"endColumn":3},{"ruleId":"201","severity":1,"message":"202","line":42,"column":8,"nodeType":"203","endLine":42,"endColumn":36,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"205","line":21,"column":8,"nodeType":"203","endLine":21,"endColumn":24,"suggestions":"206"},{"ruleId":"201","severity":1,"message":"207","line":10,"column":8,"nodeType":"203","endLine":10,"endColumn":24,"suggestions":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],["209"],["210"],["209"],["210"],["209"],["210"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["209"],["210"],"no-unused-vars","'del' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["213"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"220","text":"221"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"222","text":"223"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"224","text":"225"},[1813,1841],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[706,722],"[getProfileById, match.params.id]",[352,368],"[getGithubRepos, username]"]